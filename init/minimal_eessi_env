# define minimal EESSI environment, without relying on external scripts
#
# this script is *sourced*, not executed, so can't rely on $0 to determine path to self
# $BASH_SOURCE points to correct path, see also http://mywiki.wooledge.org/BashFAQ/028
EESSI_INIT_DIR_PATH=$(dirname $(realpath $BASH_SOURCE))
echo "init/minimal_eessi_env: BASH_SOURCE='${BASH_SOURCE}'"
echo "init/minimal_eessi_env: realpath BASH_SOURCE='$(realpath ${BASH_SOURCE})'"
echo "init/minimal_eessi_env: EESSI_INIT_DIR_PATH='${EESSI_INIT_DIR_PATH}'"

echo "EESSI_ settings BEFORE sourcing eessi_defaults"
env | grep EESSI_

# set up defaults: EESSI_CVMFS_REPO, EESSI_PILOT_VERSION
#   script takes *_OVERRIDEs into account
source ${EESSI_INIT_DIR_PATH}/eessi_defaults

echo "EESSI_ settings AFTER sourcing eessi_defaults"
env | grep EESSI_

export EESSI_PREFIX=$EESSI_CVMFS_REPO/versions/$EESSI_PILOT_VERSION

if [[ $(uname -s) == 'Linux' ]]; then
    export EESSI_OS_TYPE='linux'
else
    export EESSI_OS_TYPE='macos'
fi

# aarch64 (Arm 64-bit), ppc64le (POWER 64-bit), x86_64 (x86 64-bit)
export EESSI_CPU_FAMILY=$(uname -m)

# set $EPREFIX since that is basically a standard in Gentoo Prefix
export EPREFIX=$EESSI_PREFIX/compat/$EESSI_OS_TYPE/$EESSI_CPU_FAMILY
