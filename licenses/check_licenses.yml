name: Check and update licenses

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  license_update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.X' 

      - name: Run license script and generate patch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python update_licenses.py --source=pypi TensorFlow
          python update_licenses.py --source=github:easybuilders/easybuild EasyBuild
          if [ -f license_update.patch ] && [ -s license_update.patch ]; then
            PATCH_CONTENT=$(cat license_update.patch)
            echo "patch=$PATCH_CONTENT" >> $GITHUB_OUTPUT
          fi 

      - name: Create a PR (if changes detected)
        uses: peter-evans/create-pull-request@v5
        if: steps.check_licenses.outputs.patch != ''
        with: 
        commit-message: "Auto PR: Update licenses"
        title: "Auto PR: Update licenses"
         body: ${{ steps.check_licenses.outputs.patch }}
         branch: main #fork branch
         base: main #specify right brancg here

      - name: Apply patch (if no PR created)
        if: steps.create_pull_request.outputs.pull-request-number == '' && steps.check_licenses.outputs.patch != ''        
        run: |
          if [ -f license_update.patch ] && [ -s license_update.patch ]; then
            git apply license_update.patch
          else
            echo "No changes to apply"
          fi
          git add licenses.json
          git diff --cached --exit-code || git commit -m "Update licenses.json"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
